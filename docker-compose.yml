services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - ./backend:/app
      - ./data:/app/data
    ports:
      - "8001:8000"
      - "8080:8080"
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_DB_HOST=${DJANGO_DB_HOST}
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CHROMA_SERVER_HOST=chromadb
      - CHROMA_SERVER_PORT=8000
      - APP_DATA_DIR=/app/data
      - GRPC_VERBOSITY=error
      - GRPC_TRACE=
      - OTEL_LOG_LEVEL=error
    depends_on:
      - db
      - redis

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.backend
    entrypoint: [""]
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - chroma_model_cache:/root/.cache/chroma/onnx_models
    env_file:
      - .env
    environment:
      - DJANGO_DB_HOST=${DJANGO_DB_HOST}
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CHROMA_SERVER_HOST=chromadb
      - CHROMA_SERVER_PORT=8000
      - APP_DATA_DIR=/app/data
      - GRPC_VERBOSITY=error
      - GRPC_TRACE=
      - OTEL_LOG_LEVEL=error
    depends_on:
      - chromadb_init
      - redis
      - db

  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    entrypoint: [""]
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - chroma_model_cache:/root/.cache/chroma/onnx_models
    env_file:
      - .env
    environment:
      - DJANGO_DB_HOST=${DJANGO_DB_HOST}
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CHROMA_SERVER_HOST=chromadb
      - CHROMA_SERVER_PORT=8000
      - APP_DATA_DIR=/app/data
      - GRPC_VERBOSITY=error
      - GRPC_TRACE=
      - OTEL_LOG_LEVEL=error
    depends_on:
      - chromadb_init
      - redis
      - db

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  chromadb:
    image: chromadb/chroma:latest
    volumes:
      - chroma_data:/chroma/data
    ports:
      - "8000:8000"
    environment:
      - ALLOW_RESET=true
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - GRPC_VERBOSITY=error
      - GRPC_TRACE=
      - OTEL_LOG_LEVEL=error

  chromadb_init:
    build:
      context: .
      dockerfile: Dockerfile.backend
    entrypoint: [""]
    command: python -c "from ai.utils.stock_universe_chromadb_ingest import ingest_stock_universe; ingest_stock_universe()"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - chroma_model_cache:/root/.cache/chroma/onnx_models
    environment:
      - CHROMA_SERVER_HOST=chromadb
      - CHROMA_SERVER_PORT=8000
      - APP_DATA_DIR=/app/data
      - GRPC_VERBOSITY=error
      - GRPC_TRACE=
      - OTEL_LOG_LEVEL=error
    depends_on:
      - chromadb
      - db
      - redis

volumes:
  postgres_data:
  chroma_data:
  chroma_model_cache: